@model Dictionary<int, StoreFrontLab.UI.Models.CartItemViewModel>
@{
    ViewBag.Title = "Shopping Cart";

    decimal? cartTotal = 0;
    int numOfItems = 0;
}

<div class="container">
    <h2 class="viewHeader">@ViewBag.Title</h2>
    <hr />
    <p>
        @Html.ActionLink("Back to Shopping", "Index", "Products", null, new { @class = "btn btn-warning" })
    </p>

    @if (Model.Count == 0)
    {
        <p class="alert alert-warning">
            @ViewBag.Message
        </p>
    }
    else
    {
        <table class="table">
            <tr>
                <th>Product Image</th>
                <th>Quantity</th>
                <th>Name</th>
                <th>Price</th>
                <th>Total</th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <img src="~/Content/images/t_@item.Value.Product.ProductImage" alt="@item.Value.Product.ProductName" />
                    </td>
                    <td>
                        @using (Html.BeginForm("UpdateCart", "ShoppingCart", FormMethod.Post))
                        {
                            @Html.Hidden("ProductID", item.Key)
                            @Html.TextBox("quantity", item.Value.Quantity, new { @class = "form-control", @style = "max-width: 4em; display: inline;" })
                            <input type="submit" value="Update Quantity" class="btn btn-warning" />
                        }

                        @{
                            numOfItems += item.Value.Quantity;
                        }
                    </td>
                    <td>
                        @item.Value.Product.ProductName
                    </td>
                    <td>
                        @string.Format($"{item.Value.Product.Price:c}")
                    </td>
                    <td>
                        @{ 
                            decimal? lineTotal = item.Value.Product.Price * item.Value.Quantity;
                            cartTotal += lineTotal;
                        }
                        @string.Format($"{lineTotal:c}")
                    </td>
                    <td>
                        @Html.ActionLink("Remove From Cart", "RemoveFromCart", new { id = item.Key })
                    </td>
                </tr>
            }
        </table>

        <p class="alert alert-success text-center">
            There @(numOfItems == 1 ? "is" : "are") @numOfItems item@(numOfItems == 1 ? "" : "s") in your cart.
            Your total before taxes and shipping costs is @string.Format($"{cartTotal:c}")
        </p>
    }
</div>